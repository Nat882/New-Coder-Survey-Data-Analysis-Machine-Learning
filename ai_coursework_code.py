{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":2899404,"sourceType":"datasetVersion","datasetId":1776740}],"dockerImageVersionId":30664,"isInternetEnabled":false,"language":"python","sourceType":"script","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:50.818327Z\",\"iopub.execute_input\":\"2024-04-10T09:56:50.818675Z\",\"iopub.status.idle\":\"2024-04-10T09:56:51.114237Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:50.818648Z\",\"shell.execute_reply\":\"2024-04-10T09:56:51.112820Z\"}}\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns   \nimport numpy as np\nimport geopandas as gpd\ncoder_survey = pd.read_csv(\"/kaggle/input/2021-new-coder-survey/2021 New Coder Survey.csv\")\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:51.116074Z\",\"iopub.execute_input\":\"2024-04-10T09:56:51.116341Z\",\"iopub.status.idle\":\"2024-04-10T09:56:51.137820Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:51.116319Z\",\"shell.execute_reply\":\"2024-04-10T09:56:51.136266Z\"}}\ncoder_survey.head()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:51.139291Z\",\"iopub.execute_input\":\"2024-04-10T09:56:51.141187Z\",\"iopub.status.idle\":\"2024-04-10T09:56:51.186032Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:51.141143Z\",\"shell.execute_reply\":\"2024-04-10T09:56:51.184779Z\"}}\ncoder_survey\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:51.188690Z\",\"iopub.execute_input\":\"2024-04-10T09:56:51.189061Z\",\"iopub.status.idle\":\"2024-04-10T09:56:51.203644Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:51.189031Z\",\"shell.execute_reply\":\"2024-04-10T09:56:51.202608Z\"}}\ndf = pd.DataFrame(columns=['Income', 'Age', 'Region', 'inEducation', 'weeklyHoursSpent', 'monthsSpent', 'Gender', 'Employed', 'levelOfEducation'])\ndf['Income'] = coder_survey.iloc[:, 22]  \ndf['Age'] = coder_survey.iloc[:, 23]  \ndf['Region'] = coder_survey.iloc[:, 26] \ndf['inEducation'] = coder_survey.iloc[:,34]\ndf['weeklyHoursSpent'] = coder_survey.iloc[:,7]\ndf['monthsSpent'] = coder_survey.iloc[:,8]\ndf['Gender'] = coder_survey.iloc[:,24]\ndf['Employed'] = coder_survey.iloc[:,20]\ndf['levelOfEducation'] = coder_survey.iloc[:, 32]  \n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:51.204888Z\",\"iopub.execute_input\":\"2024-04-10T09:56:51.205183Z\",\"iopub.status.idle\":\"2024-04-10T09:56:51.221082Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:51.205154Z\",\"shell.execute_reply\":\"2024-04-10T09:56:51.219843Z\"}}\ndf\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:51.222213Z\",\"iopub.execute_input\":\"2024-04-10T09:56:51.222541Z\",\"iopub.status.idle\":\"2024-04-10T09:56:51.242345Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:51.222518Z\",\"shell.execute_reply\":\"2024-04-10T09:56:51.241278Z\"}}\ndf.head()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:51.244357Z\",\"iopub.execute_input\":\"2024-04-10T09:56:51.244691Z\",\"iopub.status.idle\":\"2024-04-10T09:56:51.259202Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:51.244665Z\",\"shell.execute_reply\":\"2024-04-10T09:56:51.258232Z\"}}\nmissing_values = df.isnull().sum()\nprint(missing_values)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:51.260645Z\",\"iopub.execute_input\":\"2024-04-10T09:56:51.261421Z\",\"iopub.status.idle\":\"2024-04-10T09:56:51.674925Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:51.261330Z\",\"shell.execute_reply\":\"2024-04-10T09:56:51.673765Z\"}}\nsns.countplot(y=df['Income'], data=coder_survey)\nplt.xlabel(\"count\")\nplt.ylabel(\"income\")\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:51.676551Z\",\"iopub.execute_input\":\"2024-04-10T09:56:51.676895Z\",\"iopub.status.idle\":\"2024-04-10T09:56:51.684607Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:51.676864Z\",\"shell.execute_reply\":\"2024-04-10T09:56:51.683452Z\"}}\ndf[\"Income\"].unique()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:51.689254Z\",\"iopub.execute_input\":\"2024-04-10T09:56:51.689727Z\",\"iopub.status.idle\":\"2024-04-10T09:56:51.705568Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:51.689689Z\",\"shell.execute_reply\":\"2024-04-10T09:56:51.704553Z\"}}\ndf_clean = df.dropna()\nprint(df_clean['Income'].unique())\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:51.706525Z\",\"iopub.execute_input\":\"2024-04-10T09:56:51.706858Z\",\"iopub.status.idle\":\"2024-04-10T09:56:51.717777Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:51.706832Z\",\"shell.execute_reply\":\"2024-04-10T09:56:51.716416Z\"}}\ndf_clean = df_clean[df_clean[\"Income\"] != 'I donâ€™t know']\nprint(df_clean[\"Income\"].unique())\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:51.719282Z\",\"iopub.execute_input\":\"2024-04-10T09:56:51.720183Z\",\"iopub.status.idle\":\"2024-04-10T09:56:51.732139Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:51.720145Z\",\"shell.execute_reply\":\"2024-04-10T09:56:51.730983Z\"}}\ndf_clean = df_clean[df_clean[\"Income\"] != \"I don't want to answer\"]\nprint(df_clean[\"Income\"].unique())\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:51.733842Z\",\"iopub.execute_input\":\"2024-04-10T09:56:51.734819Z\",\"iopub.status.idle\":\"2024-04-10T09:56:52.323023Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:51.734781Z\",\"shell.execute_reply\":\"2024-04-10T09:56:52.321742Z\"}}\nincome_counts = df_clean['Income'].value_counts()\n\nincome_order = income_counts.index\n\nsns.countplot(y=df_clean['Income'], order=income_order, data=df_clean)\nplt.xlabel(\"Count\")\nplt.ylabel(\"Income\")\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:52.324640Z\",\"iopub.execute_input\":\"2024-04-10T09:56:52.324910Z\",\"iopub.status.idle\":\"2024-04-10T09:56:52.337241Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:52.324889Z\",\"shell.execute_reply\":\"2024-04-10T09:56:52.336104Z\"}}\nmissing_values = df.isnull().sum()\nprint(missing_values)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:52.339098Z\",\"iopub.execute_input\":\"2024-04-10T09:56:52.339518Z\",\"iopub.status.idle\":\"2024-04-10T09:56:52.352209Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:52.339489Z\",\"shell.execute_reply\":\"2024-04-10T09:56:52.350682Z\"}}\nmissing_values = df_clean.isnull().sum()\nprint(missing_values)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:52.353562Z\",\"iopub.execute_input\":\"2024-04-10T09:56:52.353960Z\",\"iopub.status.idle\":\"2024-04-10T09:56:52.385060Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:52.353926Z\",\"shell.execute_reply\":\"2024-04-10T09:56:52.383955Z\"}}\nfrom sklearn.preprocessing import OrdinalEncoder\nincome_level = [[\n                       'Under $1,000',\n                       '$1,000 to $2,999',\n                       '$3,000 to $4,999',\n                       '$5,000 to $6,999', \n                       '$7,000 to $9,999',\n                       '$10,000 to $14,999',\n                       '$15,000 to $19,999',\n                       '$20,000 to $24,999',\n                       '$25,000 to $29,999',\n                       '$30,000 to $34,999', \n                       '$35,000 to $39,999',\n                       '$40,000 to $49,999',\n                       '$50,000 to $59,999',\n                       '$60,000 to $74,999',\n                       '$75,000 to $89,999',\n                       '$90,000 to $119,999',\n                       '$120,000 to $159,999',\n                       '$160,000 to $199,999', \n                       '$200,000 to $249,999',\n                       '$250,000 or over',]] \nfrom sklearn.preprocessing import OrdinalEncoder\nencoder = OrdinalEncoder(categories = income_level)  \ndf_clean['IncomeLevel'] = encoder.fit_transform(df_clean[['Income']])\ndisplay(df_clean)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:52.386101Z\",\"iopub.execute_input\":\"2024-04-10T09:56:52.386495Z\",\"iopub.status.idle\":\"2024-04-10T09:56:52.397132Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:52.386466Z\",\"shell.execute_reply\":\"2024-04-10T09:56:52.395640Z\"}}\nincome_stats = df_clean['Income'].describe()\n\nprint(\"Summary statistics for Income:\")\nprint(income_stats)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:52.398506Z\",\"iopub.execute_input\":\"2024-04-10T09:56:52.398872Z\",\"iopub.status.idle\":\"2024-04-10T09:56:52.697881Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:52.398841Z\",\"shell.execute_reply\":\"2024-04-10T09:56:52.696636Z\"}}\nsns.countplot(y = 'IncomeLevel', data = df_clean)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:52.699340Z\",\"iopub.execute_input\":\"2024-04-10T09:56:52.699683Z\",\"iopub.status.idle\":\"2024-04-10T09:56:52.718347Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:52.699658Z\",\"shell.execute_reply\":\"2024-04-10T09:56:52.717524Z\"}}\ndf_clean['HighIncome'] = df_clean['IncomeLevel'].apply(lambda x:0 if x < 9 else 1)\ndf_clean.head()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:52.719421Z\",\"iopub.execute_input\":\"2024-04-10T09:56:52.719750Z\",\"iopub.status.idle\":\"2024-04-10T09:56:52.728571Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:52.719721Z\",\"shell.execute_reply\":\"2024-04-10T09:56:52.727666Z\"}}\ndf_clean['LowIncome'] = df_clean['IncomeLevel'].apply(lambda x: 1 if x < 9 else 0)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:52.730542Z\",\"iopub.execute_input\":\"2024-04-10T09:56:52.731300Z\",\"iopub.status.idle\":\"2024-04-10T09:56:52.753381Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:52.731197Z\",\"shell.execute_reply\":\"2024-04-10T09:56:52.752071Z\"}}\ndf_clean\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:52.754504Z\",\"iopub.execute_input\":\"2024-04-10T09:56:52.754954Z\",\"iopub.status.idle\":\"2024-04-10T09:56:52.910897Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:52.754928Z\",\"shell.execute_reply\":\"2024-04-10T09:56:52.909849Z\"}}\nsns.countplot(y='HighIncome', data=df_clean)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:52.912125Z\",\"iopub.execute_input\":\"2024-04-10T09:56:52.912410Z\",\"iopub.status.idle\":\"2024-04-10T09:56:52.934379Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:52.912386Z\",\"shell.execute_reply\":\"2024-04-10T09:56:52.933640Z\"}}\ndf_clean\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:52.935493Z\",\"iopub.execute_input\":\"2024-04-10T09:56:52.936248Z\",\"iopub.status.idle\":\"2024-04-10T09:56:52.944255Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:52.936216Z\",\"shell.execute_reply\":\"2024-04-10T09:56:52.943225Z\"}}\ndf_clean[\"Gender\"].unique()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:52.945572Z\",\"iopub.execute_input\":\"2024-04-10T09:56:52.945902Z\",\"iopub.status.idle\":\"2024-04-10T09:56:52.957059Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:52.945875Z\",\"shell.execute_reply\":\"2024-04-10T09:56:52.955829Z\"}}\n\ndef transform_gender(Gender):\n    if Gender in ['Male', 'Female','Transgender']:\n        return Gender\n    else:\n        return 'Other'\n\ndf_clean['Gender'] = df_clean[\"Gender\"].apply(transform_gender)\n\nprint(df_clean[\"Gender\"].unique())\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:52.958561Z\",\"iopub.execute_input\":\"2024-04-10T09:56:52.958905Z\",\"iopub.status.idle\":\"2024-04-10T09:56:52.969169Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:52.958874Z\",\"shell.execute_reply\":\"2024-04-10T09:56:52.968133Z\"}}\ndf_clean[\"Gender\"].unique()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:52.970597Z\",\"iopub.execute_input\":\"2024-04-10T09:56:52.971123Z\",\"iopub.status.idle\":\"2024-04-10T09:56:52.980609Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:52.971090Z\",\"shell.execute_reply\":\"2024-04-10T09:56:52.979686Z\"}}\ndf_clean.columns\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:52.992458Z\",\"iopub.execute_input\":\"2024-04-10T09:56:52.992812Z\",\"iopub.status.idle\":\"2024-04-10T09:56:53.159783Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:52.992786Z\",\"shell.execute_reply\":\"2024-04-10T09:56:53.158875Z\"}}\nsns.countplot(x='Gender', data=df_clean)\nplt.title('Gender Countplot')\nplt.xlabel('Gender')\nplt.ylabel('Count')\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:53.161003Z\",\"iopub.execute_input\":\"2024-04-10T09:56:53.161374Z\",\"iopub.status.idle\":\"2024-04-10T09:56:53.167299Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:53.161354Z\",\"shell.execute_reply\":\"2024-04-10T09:56:53.166572Z\"}}\ngender_counts = df_clean['Gender'].value_counts()\ngender_percentage = (gender_counts / len(df_clean)) * 100\n\nprint(\"Percentage of each gender:\")\nprint(gender_percentage)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:53.168520Z\",\"iopub.execute_input\":\"2024-04-10T09:56:53.168822Z\",\"iopub.status.idle\":\"2024-04-10T09:56:53.186101Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:53.168802Z\",\"shell.execute_reply\":\"2024-04-10T09:56:53.184620Z\"}}\nmissing_values = df_clean.isnull().sum()\nprint(missing_values)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:53.187667Z\",\"iopub.execute_input\":\"2024-04-10T09:56:53.188014Z\",\"iopub.status.idle\":\"2024-04-10T09:56:53.207096Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:53.187984Z\",\"shell.execute_reply\":\"2024-04-10T09:56:53.205929Z\"}}\ndf_clean\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:53.208335Z\",\"iopub.execute_input\":\"2024-04-10T09:56:53.208658Z\",\"iopub.status.idle\":\"2024-04-10T09:56:53.222343Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:53.208633Z\",\"shell.execute_reply\":\"2024-04-10T09:56:53.221579Z\"}}\ndf_clean['inEducation'].unique()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:53.223753Z\",\"iopub.execute_input\":\"2024-04-10T09:56:53.224083Z\",\"iopub.status.idle\":\"2024-04-10T09:56:53.234514Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:53.224057Z\",\"shell.execute_reply\":\"2024-04-10T09:56:53.233163Z\"}}\ndf_clean['inEducation'].fillna('prefer not to say', inplace=True)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:53.236205Z\",\"iopub.execute_input\":\"2024-04-10T09:56:53.236560Z\",\"iopub.status.idle\":\"2024-04-10T09:56:53.247944Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:53.236535Z\",\"shell.execute_reply\":\"2024-04-10T09:56:53.246790Z\"}}\ndf['Age'].unique()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:53.248992Z\",\"iopub.execute_input\":\"2024-04-10T09:56:53.249771Z\",\"iopub.status.idle\":\"2024-04-10T09:56:53.259411Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:53.249690Z\",\"shell.execute_reply\":\"2024-04-10T09:56:53.258282Z\"}}\ndf_clean['Age'].unique()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:53.260766Z\",\"iopub.execute_input\":\"2024-04-10T09:56:53.261472Z\",\"iopub.status.idle\":\"2024-04-10T09:56:53.275577Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:53.261447Z\",\"shell.execute_reply\":\"2024-04-10T09:56:53.274178Z\"}}\ndf_clean['Age'] = np.floor(df['Age'].fillna(0))\ndf_clean['Age'] = df_clean['Age'].astype(int)\ndf_clean['Age'].unique()\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:53.277552Z\",\"iopub.execute_input\":\"2024-04-10T09:56:53.278220Z\",\"iopub.status.idle\":\"2024-04-10T09:56:53.457726Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:53.278186Z\",\"shell.execute_reply\":\"2024-04-10T09:56:53.456650Z\"}}\nfig, ax = plt.subplots(figsize=(6, 7))\n\n# Create the box plot\nax.boxplot(df_clean['Age'].dropna())\n\n# Set the title and axis labels\nax.set_title('Age Box Plot')\nax.set_xlabel('Frequency')\nax.set_ylabel('Age')\n\nax.set_yticks(range(0, 130, 10))\n# Show the plot\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:53.458933Z\",\"iopub.execute_input\":\"2024-04-10T09:56:53.460412Z\",\"iopub.status.idle\":\"2024-04-10T09:56:53.470173Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:53.460384Z\",\"shell.execute_reply\":\"2024-04-10T09:56:53.469019Z\"}}\ndf_clean = df_clean[df_clean['Age'] < 90]\ndf_clean = df_clean[df_clean['Age'] > 12]\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:53.471558Z\",\"iopub.execute_input\":\"2024-04-10T09:56:53.471861Z\",\"iopub.status.idle\":\"2024-04-10T09:56:53.647005Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:53.471837Z\",\"shell.execute_reply\":\"2024-04-10T09:56:53.646272Z\"}}\nfig, ax = plt.subplots(figsize=(6, 7))\n\n# Create the box plot\nax.boxplot(df_clean['Age'].dropna())\n\n# Set the title and axis labels\nax.set_title('Age Box Plot')\nax.set_xlabel('Frequency')\nax.set_ylabel('Age')\n\nax.set_yticks(range(0, 130, 10))\n# Show the plot\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:53.648177Z\",\"iopub.execute_input\":\"2024-04-10T09:56:53.648610Z\",\"iopub.status.idle\":\"2024-04-10T09:56:53.656912Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:53.648584Z\",\"shell.execute_reply\":\"2024-04-10T09:56:53.656269Z\"}}\nmedian_age = df_clean['Age'].median()\n\nq1 = df_clean['Age'].quantile(0.25)  \nq3 = df_clean['Age'].quantile(0.75)  \n\niqr = q3 - q1\n\nmin_age = df_clean['Age'].min()\nmax_age = df_clean['Age'].max()\n\nprint(\"Median:\", median_age)\nprint(\"Lower Quartile (Q1):\", q1)\nprint(\"Upper Quartile (Q3):\", q3)\nprint(\"Interquartile Range (IQR):\", iqr)\nprint(\"Minimum Age:\", min_age)\nprint(\"Maximum Age:\", max_age)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:53.657969Z\",\"iopub.execute_input\":\"2024-04-10T09:56:53.658376Z\",\"iopub.status.idle\":\"2024-04-10T09:56:53.668155Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:53.658351Z\",\"shell.execute_reply\":\"2024-04-10T09:56:53.667099Z\"}}\ndf['Region'].unique()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:53.669331Z\",\"iopub.execute_input\":\"2024-04-10T09:56:53.669582Z\",\"iopub.status.idle\":\"2024-04-10T09:56:53.682574Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:53.669560Z\",\"shell.execute_reply\":\"2024-04-10T09:56:53.681583Z\"}}\ndf_clean['weeklyHoursSpent'].unique()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:53.683929Z\",\"iopub.execute_input\":\"2024-04-10T09:56:53.684202Z\",\"iopub.status.idle\":\"2024-04-10T09:56:53.966896Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:53.684179Z\",\"shell.execute_reply\":\"2024-04-10T09:56:53.965424Z\"}}\ndf_clean['weeklyHoursSpent'] = pd.to_numeric(df_clean['weeklyHoursSpent'], errors='coerce')\n\nbin_edges = list(range(0, 201, 10))  \n\nplt.figure(figsize=(10, 6))\nsns.histplot(data=df_clean, x='weeklyHoursSpent', bins=bin_edges, kde=False)\nplt.title('Hours Coded Distribution')\nplt.xlabel('Weekly Hours Spent')\nplt.ylabel('Count')\nplt.xticks(bin_edges)\nplt.grid(axis='y', linestyle='--', alpha=0.7)\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:53.968259Z\",\"iopub.execute_input\":\"2024-04-10T09:56:53.969181Z\",\"iopub.status.idle\":\"2024-04-10T09:56:54.267578Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:53.969146Z\",\"shell.execute_reply\":\"2024-04-10T09:56:54.266402Z\"}}\ndf_clean['monthsSpent'] = pd.to_numeric(df_clean['monthsSpent'], errors='coerce')\n\n# Define the bin edges with intervals of 10\nbin_edges = list(range(0, 201, 10))  # Assuming maximum value is 200\n\n# Plotting\nplt.figure(figsize=(10, 6))\nsns.histplot(data=df_clean, x='monthsSpent', bins=bin_edges, kde=False)\nplt.title('Months Coded Distribution')\nplt.xlabel('Months Spent')\nplt.ylabel('Count')\nplt.xticks(bin_edges)\nplt.grid(axis='y', linestyle='--', alpha=0.7)\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:54.268693Z\",\"iopub.execute_input\":\"2024-04-10T09:56:54.268949Z\",\"iopub.status.idle\":\"2024-04-10T09:56:54.486675Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:54.268928Z\",\"shell.execute_reply\":\"2024-04-10T09:56:54.486071Z\"}}\nsns.countplot(data=df_clean, x='Region')\nplt.title('Region Distribution')\nplt.xticks(rotation=90)\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:54.487632Z\",\"iopub.execute_input\":\"2024-04-10T09:56:54.488380Z\",\"iopub.status.idle\":\"2024-04-10T09:56:54.643850Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:54.488359Z\",\"shell.execute_reply\":\"2024-04-10T09:56:54.643107Z\"}}\nregion_counts = df_clean['Region'].value_counts()\n\n# Plotting\nplt.figure(figsize=(8, 6))\nplt.pie(region_counts, labels=region_counts.index, autopct='%1.1f%%', startangle=140)\nplt.title('Region Distribution')\nplt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:54.644826Z\",\"iopub.execute_input\":\"2024-04-10T09:56:54.645941Z\",\"iopub.status.idle\":\"2024-04-10T09:56:54.657459Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:54.645912Z\",\"shell.execute_reply\":\"2024-04-10T09:56:54.656751Z\"}}\ndf['Employed'].unique()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:54.658402Z\",\"iopub.execute_input\":\"2024-04-10T09:56:54.659182Z\",\"iopub.status.idle\":\"2024-04-10T09:56:54.670865Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:54.659155Z\",\"shell.execute_reply\":\"2024-04-10T09:56:54.670110Z\"}}\ndf_clean['Employed'].dropna()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:54.671850Z\",\"iopub.execute_input\":\"2024-04-10T09:56:54.672599Z\",\"iopub.status.idle\":\"2024-04-10T09:56:54.684670Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:54.672572Z\",\"shell.execute_reply\":\"2024-04-10T09:56:54.683980Z\"}}\ned_counts = df_clean['levelOfEducation'].value_counts()\ned_percentage = (ed_counts / len(df_clean)) * 100\ned_percentage_rounded = ed_percentage.round(1)\n\nprint(\"Percentage:\")\nprint(ed_percentage_rounded)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:54.685607Z\",\"iopub.execute_input\":\"2024-04-10T09:56:54.686338Z\",\"iopub.status.idle\":\"2024-04-10T09:56:54.709304Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:54.686302Z\",\"shell.execute_reply\":\"2024-04-10T09:56:54.708509Z\"}}\ndf_clean\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:54.710204Z\",\"iopub.execute_input\":\"2024-04-10T09:56:54.710762Z\",\"iopub.status.idle\":\"2024-04-10T09:56:54.718415Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:54.710738Z\",\"shell.execute_reply\":\"2024-04-10T09:56:54.717398Z\"}}\nmissing_values = df_clean.isnull().sum()\nprint(missing_values)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:54.719364Z\",\"iopub.execute_input\":\"2024-04-10T09:56:54.719732Z\",\"iopub.status.idle\":\"2024-04-10T09:56:54.734423Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:54.719691Z\",\"shell.execute_reply\":\"2024-04-10T09:56:54.733187Z\"}}\nX = df_clean[['Region']]\nX.head()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:54.736003Z\",\"iopub.execute_input\":\"2024-04-10T09:56:54.736421Z\",\"iopub.status.idle\":\"2024-04-10T09:56:54.748327Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:54.736392Z\",\"shell.execute_reply\":\"2024-04-10T09:56:54.747499Z\"}}\ny = df_clean[['HighIncome']]\ny.head()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:54.749521Z\",\"iopub.execute_input\":\"2024-04-10T09:56:54.749801Z\",\"iopub.status.idle\":\"2024-04-10T09:56:54.765771Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:54.749780Z\",\"shell.execute_reply\":\"2024-04-10T09:56:54.764252Z\"}}\ndf_cluster = df_clean[['Region','HighIncome']]\ndf_cluster.head()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:54.766817Z\",\"iopub.execute_input\":\"2024-04-10T09:56:54.767348Z\",\"iopub.status.idle\":\"2024-04-10T09:56:54.787273Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:54.767321Z\",\"shell.execute_reply\":\"2024-04-10T09:56:54.786248Z\"}}\nX_cluster = pd.get_dummies(df_cluster) \nX_cluster.head()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:54.788606Z\",\"iopub.execute_input\":\"2024-04-10T09:56:54.788884Z\",\"iopub.status.idle\":\"2024-04-10T09:56:54.797133Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:54.788861Z\",\"shell.execute_reply\":\"2024-04-10T09:56:54.796263Z\"}}\nfrom sklearn.model_selection import train_test_split \nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)\nprint(X_train[0:5])\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:54.797853Z\",\"iopub.execute_input\":\"2024-04-10T09:56:54.798075Z\",\"iopub.status.idle\":\"2024-04-10T09:56:54.804628Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:54.798056Z\",\"shell.execute_reply\":\"2024-04-10T09:56:54.803744Z\"}}\nfrom sklearn.cluster import KMeans\nkm = KMeans(n_clusters=5)  \n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:54.805453Z\",\"iopub.execute_input\":\"2024-04-10T09:56:54.806510Z\",\"iopub.status.idle\":\"2024-04-10T09:56:55.808312Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:54.806460Z\",\"shell.execute_reply\":\"2024-04-10T09:56:55.807681Z\"}}\ny_cluster = km.fit_predict(X_cluster)\nprint(y_cluster[0:5])\ndf_cluster['ClusterLabel'] = y_cluster \ndf_cluster.head()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:55.809242Z\",\"iopub.execute_input\":\"2024-04-10T09:56:55.809683Z\",\"iopub.status.idle\":\"2024-04-10T09:56:56.148616Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:55.809656Z\",\"shell.execute_reply\":\"2024-04-10T09:56:56.147972Z\"}}\nimport seaborn as sns\nsns.countplot(data=df_cluster, x=\"ClusterLabel\", hue=\"Region\")\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:56.149584Z\",\"iopub.execute_input\":\"2024-04-10T09:56:56.150024Z\",\"iopub.status.idle\":\"2024-04-10T09:56:56.381236Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:56.150001Z\",\"shell.execute_reply\":\"2024-04-10T09:56:56.380211Z\"}}\nimport seaborn as sns\nsns.countplot(data=df_cluster, x=\"ClusterLabel\", hue=\"HighIncome\")\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:56.382366Z\",\"iopub.execute_input\":\"2024-04-10T09:56:56.382636Z\",\"iopub.status.idle\":\"2024-04-10T09:56:56.386988Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:56.382612Z\",\"shell.execute_reply\":\"2024-04-10T09:56:56.385965Z\"}}\nfrom sklearn.cluster import KMeans\nimport matplotlib.pyplot as plt\n\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:56:56.388177Z\",\"iopub.execute_input\":\"2024-04-10T09:56:56.388482Z\",\"iopub.status.idle\":\"2024-04-10T09:57:05.299541Z\",\"shell.execute_reply.started\":\"2024-04-10T09:56:56.388453Z\",\"shell.execute_reply\":\"2024-04-10T09:57:05.298674Z\"}}\n\nwcss = []\n\nk_range = range(1, 11)\n\nfor k in k_range:\n    km = KMeans(n_clusters=k)\n    km.fit(X_cluster)\n    wcss.append(km.inertia_)\n\nplt.figure(figsize=(8, 6))\nplt.plot(k_range, wcss, marker='o', linestyle='-', color='b')\nplt.xlabel('Number of Clusters')\nplt.ylabel('Within-Cluster Sum of Squares (WCSS)')\nplt.title('Elbow Method for Optimal Number of Clusters')\nplt.xticks(k_range)\nplt.grid(True)\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:57:05.300632Z\",\"iopub.execute_input\":\"2024-04-10T09:57:05.301174Z\",\"iopub.status.idle\":\"2024-04-10T09:57:05.310761Z\",\"shell.execute_reply.started\":\"2024-04-10T09:57:05.301143Z\",\"shell.execute_reply\":\"2024-04-10T09:57:05.309767Z\"}}\ny = df_clean[['LowIncome']]\ny.head()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:57:05.312196Z\",\"iopub.execute_input\":\"2024-04-10T09:57:05.312475Z\",\"iopub.status.idle\":\"2024-04-10T09:57:05.330061Z\",\"shell.execute_reply.started\":\"2024-04-10T09:57:05.312452Z\",\"shell.execute_reply\":\"2024-04-10T09:57:05.328591Z\"}}\ndf_cluster2 = df_clean[['Region','LowIncome']]\ndf_cluster2.head()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:57:05.331675Z\",\"iopub.execute_input\":\"2024-04-10T09:57:05.332066Z\",\"iopub.status.idle\":\"2024-04-10T09:57:05.344819Z\",\"shell.execute_reply.started\":\"2024-04-10T09:57:05.332035Z\",\"shell.execute_reply\":\"2024-04-10T09:57:05.343353Z\"}}\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\nX_cluster = pd.get_dummies(X)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:57:05.346634Z\",\"iopub.execute_input\":\"2024-04-10T09:57:05.347047Z\",\"iopub.status.idle\":\"2024-04-10T09:57:06.150072Z\",\"shell.execute_reply.started\":\"2024-04-10T09:57:05.347012Z\",\"shell.execute_reply\":\"2024-04-10T09:57:06.149039Z\"}}\nkm = KMeans(n_clusters=5)\ny_cluster = km.fit_predict(X_cluster)\n\ndf_cluster['ClusterLabel'] = y_cluster\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:57:06.151335Z\",\"iopub.execute_input\":\"2024-04-10T09:57:06.151669Z\",\"iopub.status.idle\":\"2024-04-10T09:57:06.382127Z\",\"shell.execute_reply.started\":\"2024-04-10T09:57:06.151644Z\",\"shell.execute_reply\":\"2024-04-10T09:57:06.381197Z\"}}\ndf_cluster = df_cluster.merge(df_clean[['LowIncome']], left_index=True, right_index=True)\n\nsns.countplot(data=df_cluster, x=\"ClusterLabel\", hue=\"LowIncome\")\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:57:06.384653Z\",\"iopub.execute_input\":\"2024-04-10T09:57:06.384957Z\",\"iopub.status.idle\":\"2024-04-10T09:57:06.391231Z\",\"shell.execute_reply.started\":\"2024-04-10T09:57:06.384934Z\",\"shell.execute_reply\":\"2024-04-10T09:57:06.389967Z\"}}\nX = df_clean[['Age', 'weeklyHoursSpent']]\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:57:06.392733Z\",\"iopub.execute_input\":\"2024-04-10T09:57:06.393086Z\",\"iopub.status.idle\":\"2024-04-10T09:57:07.603327Z\",\"shell.execute_reply.started\":\"2024-04-10T09:57:06.393059Z\",\"shell.execute_reply\":\"2024-04-10T09:57:07.602342Z\"}}\nkmeans = KMeans(n_clusters=3, random_state=42)\nclusters = kmeans.fit_predict(X)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:57:07.604667Z\",\"iopub.execute_input\":\"2024-04-10T09:57:07.605280Z\",\"iopub.status.idle\":\"2024-04-10T09:57:08.036294Z\",\"shell.execute_reply.started\":\"2024-04-10T09:57:07.605248Z\",\"shell.execute_reply\":\"2024-04-10T09:57:08.034636Z\"}}\ndf_clean['Cluster'] = clusters\nplt.figure(figsize=(10, 6))\nplt.scatter(df_clean['Age'], df_clean['weeklyHoursSpent'], c=df_clean['Cluster'], cmap='viridis', s=50)\nplt.xlabel('Age')\nplt.ylabel('Weekly Hours Spent')\nplt.title('Clusters of Age vs Weekly Hours Spent')\nplt.colorbar(label='Cluster')\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:57:08.037788Z\",\"iopub.execute_input\":\"2024-04-10T09:57:08.038167Z\",\"iopub.status.idle\":\"2024-04-10T09:57:08.046590Z\",\"shell.execute_reply.started\":\"2024-04-10T09:57:08.038135Z\",\"shell.execute_reply\":\"2024-04-10T09:57:08.045496Z\"}}\nincome_mapping = {\n    'Under $1,000': 0,\n    '$1,000 to $2,999': 1,\n    '$3,000 to $4,999': 2,\n    '$5,000 to $6,999': 3,\n    '$7,000 to $9,999': 4,\n    '$10,000 to $14,999': 5,\n    '$15,000 to $19,999': 6,\n    '$20,000 to $24,999': 7,\n    '$25,000 to $29,999': 8,\n    '$30,000 to $34,999': 9,\n    '$35,000 to $39,999': 10,\n    '$40,000 to $49,999': 11,\n    '$50,000 to $59,999': 12,\n    '$60,000 to $74,999': 13,\n    '$75,000 to $89,999': 14,\n    '$90,000 to $119,999': 15,\n    '$120,000 to $159,999': 16,\n    '$160,000 to $199,999': 17,\n    '$200,000 to $249,999': 18,\n    '$250,000 or over': 19\n}\n\n# Map income values to numerical values\ndf_clean['Income Numerical'] = df_clean['Income'].map(income_mapping)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:57:08.047888Z\",\"iopub.execute_input\":\"2024-04-10T09:57:08.049424Z\",\"iopub.status.idle\":\"2024-04-10T09:57:08.494312Z\",\"shell.execute_reply.started\":\"2024-04-10T09:57:08.049387Z\",\"shell.execute_reply\":\"2024-04-10T09:57:08.493636Z\"}}\nplt.figure(figsize=(10, 6))\nplt.scatter(df_clean['Age'], df_clean['Income Numerical'], c=df_clean['Cluster'], cmap='viridis', s=50)\nplt.xlabel('Age')\nplt.ylabel('Income Level')\nplt.title('Income Level vs Age')\nplt.colorbar(label='Cluster')\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:57:08.495200Z\",\"iopub.execute_input\":\"2024-04-10T09:57:08.495834Z\",\"iopub.status.idle\":\"2024-04-10T09:57:11.899939Z\",\"shell.execute_reply.started\":\"2024-04-10T09:57:08.495812Z\",\"shell.execute_reply\":\"2024-04-10T09:57:11.898768Z\"}}\nsns.pairplot(df_clean[['Age', 'weeklyHoursSpent', 'Income']], hue='Income')\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:57:11.901595Z\",\"iopub.execute_input\":\"2024-04-10T09:57:11.901966Z\",\"iopub.status.idle\":\"2024-04-10T09:57:11.912070Z\",\"shell.execute_reply.started\":\"2024-04-10T09:57:11.901935Z\",\"shell.execute_reply\":\"2024-04-10T09:57:11.911054Z\"}}\nX = df_clean[['Gender']]\nX.head()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:57:11.913206Z\",\"iopub.execute_input\":\"2024-04-10T09:57:11.913544Z\",\"iopub.status.idle\":\"2024-04-10T09:57:11.928895Z\",\"shell.execute_reply.started\":\"2024-04-10T09:57:11.913519Z\",\"shell.execute_reply\":\"2024-04-10T09:57:11.928132Z\"}}\ny = df_clean[['HighIncome']]\ny.head()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:57:11.930166Z\",\"iopub.execute_input\":\"2024-04-10T09:57:11.930411Z\",\"iopub.status.idle\":\"2024-04-10T09:57:11.944569Z\",\"shell.execute_reply.started\":\"2024-04-10T09:57:11.930390Z\",\"shell.execute_reply\":\"2024-04-10T09:57:11.943557Z\"}}\ndf_cluster2 = df_clean[['Gender','HighIncome']]\ndf_cluster2.head()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:57:11.946262Z\",\"iopub.execute_input\":\"2024-04-10T09:57:11.946605Z\",\"iopub.status.idle\":\"2024-04-10T09:57:11.960913Z\",\"shell.execute_reply.started\":\"2024-04-10T09:57:11.946576Z\",\"shell.execute_reply\":\"2024-04-10T09:57:11.960110Z\"}}\nX = pd.get_dummies(X) #OneHot Encoding.\nX_cluster = X_cluster.astype(int)\nX = X.astype(int)\nX.head()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:57:11.961993Z\",\"iopub.execute_input\":\"2024-04-10T09:57:11.963165Z\",\"iopub.status.idle\":\"2024-04-10T09:57:11.973427Z\",\"shell.execute_reply.started\":\"2024-04-10T09:57:11.963114Z\",\"shell.execute_reply\":\"2024-04-10T09:57:11.972212Z\"}}\nfrom sklearn.model_selection import train_test_split \nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3) \nprint(X_train[0:5])\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:57:11.974800Z\",\"iopub.execute_input\":\"2024-04-10T09:57:11.975108Z\",\"iopub.status.idle\":\"2024-04-10T09:57:12.860094Z\",\"shell.execute_reply.started\":\"2024-04-10T09:57:11.975081Z\",\"shell.execute_reply\":\"2024-04-10T09:57:12.859390Z\"}}\nfrom sklearn.cluster import KMeans\nkm = KMeans(n_clusters=5)  \ny_cluster = km.fit_predict(X_cluster)\nprint(y_cluster[0:5])\ndf_cluster['ClusterLabel'] = y_cluster \ndf_cluster.head()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:57:12.863181Z\",\"iopub.execute_input\":\"2024-04-10T09:57:12.864142Z\",\"iopub.status.idle\":\"2024-04-10T09:57:12.884348Z\",\"shell.execute_reply.started\":\"2024-04-10T09:57:12.864113Z\",\"shell.execute_reply\":\"2024-04-10T09:57:12.883013Z\"}}\nfrom sklearn import tree \nfrom sklearn import metrics \ndecision_tree = tree.DecisionTreeClassifier(max_depth = 1)\n\ndecision_tree = decision_tree.fit(X_train, y_train)\n\ny_prediction = decision_tree.predict(X_test)\n\nAccuracy = metrics.accuracy_score(y_test, y_prediction) \nprint (\"Accuracy: \", Accuracy) \n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:57:12.886571Z\",\"iopub.execute_input\":\"2024-04-10T09:57:12.887316Z\",\"iopub.status.idle\":\"2024-04-10T09:57:12.890991Z\",\"shell.execute_reply.started\":\"2024-04-10T09:57:12.887283Z\",\"shell.execute_reply\":\"2024-04-10T09:57:12.890148Z\"}}\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:57:12.901190Z\",\"iopub.execute_input\":\"2024-04-10T09:57:12.901535Z\",\"iopub.status.idle\":\"2024-04-10T09:57:12.916169Z\",\"shell.execute_reply.started\":\"2024-04-10T09:57:12.901506Z\",\"shell.execute_reply\":\"2024-04-10T09:57:12.914800Z\"}}\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, confusion_matrix\n\nconf_matrix = confusion_matrix(y_test, y_prediction)\n\nTP = conf_matrix[1, 1]\n\nTN = conf_matrix[0, 0]\n\nFP = conf_matrix[0, 1]\n\nFN = conf_matrix[1, 0]\n\nprecision = TP / (TP + FP)\n\nrecall = TP / (TP + FN)\n\nf1 = 2 * (precision * recall) / (precision + recall)\n\nprint(\"Precision:\", precision)\nprint(\"Recall:\", recall)\nprint(\"F1-score:\", f1)\nprint(\"Confusion Matrix:\")\nprint(conf_matrix)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:57:12.917600Z\",\"iopub.execute_input\":\"2024-04-10T09:57:12.917986Z\",\"iopub.status.idle\":\"2024-04-10T09:57:13.125224Z\",\"shell.execute_reply.started\":\"2024-04-10T09:57:12.917951Z\",\"shell.execute_reply\":\"2024-04-10T09:57:13.124194Z\"}}\nfig = plt.figure(figsize=(12, 10)) #plot the decision tree\np = tree.plot_tree(decision_tree, feature_names=X.columns, class_names=[\"Low\", \"High\"],  filled=True)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:57:13.126434Z\",\"iopub.execute_input\":\"2024-04-10T09:57:13.127461Z\",\"iopub.status.idle\":\"2024-04-10T09:57:13.131747Z\",\"shell.execute_reply.started\":\"2024-04-10T09:57:13.127431Z\",\"shell.execute_reply\":\"2024-04-10T09:57:13.130864Z\"}}\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import accuracy_score\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:57:13.132868Z\",\"iopub.execute_input\":\"2024-04-10T09:57:13.133531Z\",\"iopub.status.idle\":\"2024-04-10T09:57:13.144367Z\",\"shell.execute_reply.started\":\"2024-04-10T09:57:13.133502Z\",\"shell.execute_reply\":\"2024-04-10T09:57:13.143162Z\"}}\nparam_grid = {\n    'criterion': ['gini', 'entropy'],\n    'splitter': ['best', 'random'],\n    'min_samples_split': [2, 5, 10],\n    'min_samples_leaf': [1, 3],\n    'max_depth': [5, 10, 15],\n}\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:57:13.145486Z\",\"iopub.execute_input\":\"2024-04-10T09:57:13.145880Z\",\"iopub.status.idle\":\"2024-04-10T09:57:13.497771Z\",\"shell.execute_reply.started\":\"2024-04-10T09:57:13.145847Z\",\"shell.execute_reply\":\"2024-04-10T09:57:13.497045Z\"}}\nfrom sklearn.model_selection import RandomizedSearchCV\nrandom_search = RandomizedSearchCV(decision_tree, param_distributions=param_grid, n_iter=10, cv=5, random_state=1)\nrandom_search.fit(X_train, y_train)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:57:13.498902Z\",\"iopub.execute_input\":\"2024-04-10T09:57:13.499306Z\",\"iopub.status.idle\":\"2024-04-10T09:57:13.506211Z\",\"shell.execute_reply.started\":\"2024-04-10T09:57:13.499284Z\",\"shell.execute_reply\":\"2024-04-10T09:57:13.504769Z\"}}\npredictors = df_clean[['LowIncome', 'HighIncome']]\n\n\nprint(predictors.head())\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:57:13.508028Z\",\"iopub.execute_input\":\"2024-04-10T09:57:13.508836Z\",\"iopub.status.idle\":\"2024-04-10T09:57:13.634538Z\",\"shell.execute_reply.started\":\"2024-04-10T09:57:13.508795Z\",\"shell.execute_reply\":\"2024-04-10T09:57:13.633946Z\"}}\nfrom sklearn.metrics import confusion_matrix\n\n\ncm = confusion_matrix(y_test, y_prediction)\n\n\nplt.figure(figsize=(8, 6))\nsns.heatmap(cm, annot=True, fmt='d', cmap='Blues', cbar=False,\n            xticklabels=['Predicted LowIncome', 'Predicted HighIncome'],\n            yticklabels=['Actual LowIncome', 'Actual HighIncome'])\nplt.xlabel('Predicted label')\nplt.ylabel('True label')\nplt.title('Confusion Matrix')\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-04-10T09:57:13.635500Z\",\"iopub.execute_input\":\"2024-04-10T09:57:13.635932Z\",\"iopub.status.idle\":\"2024-04-10T09:57:13.662926Z\",\"shell.execute_reply.started\":\"2024-04-10T09:57:13.635909Z\",\"shell.execute_reply\":\"2024-04-10T09:57:13.662064Z\"}}\n\nfrom sklearn.linear_model import LogisticRegression\n\n#X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n\nclassifier = LogisticRegression()\nclassifier.fit(X_train, y_train)\n\ny_pred = classifier.predict(X_test)\n\naccuracy = accuracy_score(y_test, y_pred)\nprint(\"Accuracy:\", accuracy)","metadata":{"_uuid":"b53d1d8e-ba5e-4edf-9e69-8cb5c239f921","_cell_guid":"2556f10c-8490-4af0-8ac3-2386dfa67c07","collapsed":false,"jupyter":{"outputs_hidden":false},"trusted":true},"outputs":[],"execution_count":null}]}